/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * inicio.java
 *
 * Created on Dec 6, 2011, 10:08:31 AM
 */

package sigi;

import Connection.Conexion;
import sigi.ppal;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Aeroslizth
 */
public class inicio extends javax.swing.JFrame {

    Conexion con;
    ResultSet rs;
    int ID=-1;
    /** Creates new form inicio */
    public inicio() {
        try {
            initComponents();
           con = new Conexion();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        jBingresar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jLabel1.setMaximumSize(new java.awt.Dimension(500, 500));
        jLabel1.setMinimumSize(new java.awt.Dimension(500, 500));
        jLabel1.setName(""); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Entrar al Sistema");
        setMaximumSize(new java.awt.Dimension(274, 226));
        setMinimumSize(new java.awt.Dimension(274, 226));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setText("Usuario:");

        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setText("Contraseña:");

        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassKeyPressed(evt);
            }
        });

        jBingresar.setText("Ingresar");
        jBingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBingresarActionPerformed(evt);
            }
        });
        jBingresar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBingresarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jBingresar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(4, 4, 4)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(4, 4, 4)
                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBingresar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Info");

        jMenuItem2.setText("Acerca de...");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JOptionPane.showMessageDialog(rootPane, "\n\n www.systec.com.ar \n Soluciones en Software y WEB\n SiGI V1.0\n\n ");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if(JOptionPane.showConfirmDialog(rootPane, "Estás seguro de cerrarla?","Cerrar aplicación",1)==0){
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed

    private void txtPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyPressed
        int evento=evt.getKeyCode();
        int N;
        if(evento==10 ){
            String usuario=txtUser.getText();
            String pass=txtPass.getText();

            String nom="",password="",id="",nivel="",nombre="", ap="",am="";

            // se valida que no esten vacios
            if(usuario.equals("") || pass.equals(""))
            {
                JOptionPane.showMessageDialog(null,"Faltan campos por llenar");
            }
            else{

                try {
                    // se hace la conexion con la base de datos
                    con = new Conexion();

                    //sentencia sql para extraer los datos del usuario insertado
                    String sql = "select * from usuarios where user='"+usuario+"';";

                    rs = con.Consulta(sql);
                    // se obtienen los datos de la consulta

                    while (rs.next()){
                        id = rs.getString(1);
                        nombre= rs.getString(2);
                        ap= rs.getString(3);
                        am = rs.getString(4);
                        nom = rs.getString(5);
                        password = rs.getString(6);
                        nivel= rs.getString(7);
                    }
                    if (id.equals("")) {

                        JOptionPane.showMessageDialog(null,"Usuario No Encontrado");
                        txtUser.setText("");
                        txtPass.setText("");

                    }
                    else{
                        ID = Integer.parseInt(id);
                        N = Integer.parseInt(nivel);

                        //   System.out.println(id+" ---- "+nom+" ---- "+password+" --- "+nivel);
                        // sentencia sql para comprobar que el estatus del usuario es TRUE
                        //                    String sql2 ="select estatus from persona where idPersona="+ID+";";
                        //                    rs = con.Consulta(sql2);
                        //                   lleno = rs.next();
                        //                   while(lleno){
                            //                       estatus = rs.getString(1);
                            //                       lleno = rs.next();
                            //                   }

                        //metodo para encriptar la contraseña insertada en MD5

                        //                MessageDigest messagedigest = null;
                        //
                        //                try {
                            //                    messagedigest = MessageDigest.getInstance("MD5");
                            //                } catch (NoSuchAlgorithmException ex) {
                            //                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                            //                }
                        //
                        //                 messagedigest.update(pass.getBytes());
                        //                String password2 = new String(messagedigest.digest());
                        // System.out.println("pass: "+pass);
                        // se compara que el usuario de la base de datos es el mismo que el insertado
                        //se comparan ambas contraseñas encriptadas
                        if(nom.equals(usuario) && pass.equals(password)){
                            // se compara si el estatus es igual a TRUE
                            if(N==0){
                                //se carga la segunda interfaz

                                ppal inter = new ppal();
                                inter.setId(id);
                                //inter.setC();
                                inter.IDusuario = ID;
                                //JOptionPane.showMessageDialog(rootPane, "Bienvenid@ "+nombre+" "+ap+" "+am+" \n\n Ha ingresado como: Administrador");
                                inter.setVisible(true);
                                this.dispose();
                            }
                            /*         if(N==1){
                                //se carga la segunda interfaz

                                vendedor vende = new vendedor();
                                vende.setId(id);
                                vende.IDusuario = ID;
                                JOptionPane.showMessageDialog(rootPane, "Bienvenid@ "+nombre+" "+ap+" "+am+" \n\n Ha ingresado como: Vendedor");
                                vende.setVisible(true);
                                this.dispose();
                                //apertura ape = new apertura();
                                //ape.setVisible(true);
                                //this.dispose();
                            }
                            if(N==2){
                                //se carga la tercera interfaz
                                capturista cap = new capturista();
                                cap.setId(id);
                                cap.IDusuario = ID;
                                JOptionPane.showMessageDialog(rootPane, "Bienvenid@ "+nombre+" "+ap+" "+am+" \n\n Has entrado al sistema como: Capturista");
                                cap.setVisible(true);
                                this.dispose();
                            }
                            */
                        }

                        // en caso de que esten mal los datos
                        else{
                            JOptionPane.showMessageDialog(rootPane,"Contraseña Incorrecta");
                            txtUser.setText("");
                            txtPass.setText("");

                        }

                    }

                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        }
    }//GEN-LAST:event_txtPassKeyPressed

    private void jBingresarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBingresarKeyPressed
        // TODO add your handling code here:

        // BOTON PARA INGRESAR AL SISTEMA

        // se obtiene los valores de los cuadros de texto
        String usuario=txtUser.getText();
        String pass=txtPass.getText();

        String nom="",password="",id="",nivel="";
        String nombre = null;
        String ap = null;
        String am = null;
        // se valida que no esten vacios
        if(usuario.equals("") || pass.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Faltan campos por llenar");
        }
        else{

            try {
                // se hace la conexion con la base de datos
                con = new Conexion();

                //sentencia sql para extraer los datos del usuario insertado
                String sql = "select * from usuarios where user='"+usuario+"';";

                rs = con.Consulta(sql);

                // se obtienen los datos de la consulta

                while (rs.next()){
                    id = rs.getString(1);
                    nombre= rs.getString(2);
                    ap= rs.getString(3);
                    am = rs.getString(4);
                    nom = rs.getString(5);
                    password = rs.getString(6);
                    nivel= rs.getString(7);
                }
                if (id.equals("")) {

                    JOptionPane.showMessageDialog(null,"Usuario No Encontrado");
                    txtUser.setText("");
                    txtPass.setText("");

                }
                else{
                    ID = Integer.parseInt(id);
                    int N = Integer.parseInt(nivel);

                    //  System.out.println(id+" ---- "+nom+" ---- "+password+" --- "+nivel);
                    // sentencia sql para comprobar que el estatus del usuario es TRUE
                    //                    String sql2 ="select estatus from persona where idPersona="+ID+";";
                    //                    rs = con.Consulta(sql2);
                    //                   lleno = rs.next();
                    //                   while(lleno){
                        //                       estatus = rs.getString(1);
                        //                       lleno = rs.next();
                        //                   }

                    //metodo para encriptar la contraseña insertada en MD5

                    //                MessageDigest messagedigest = null;
                    //
                    //                try {
                        //                    messagedigest = MessageDigest.getInstance("MD5");
                        //                } catch (NoSuchAlgorithmException ex) {
                        //                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                        //                }
                    //
                    //                 messagedigest.update(pass.getBytes());
                    //                String password2 = new String(messagedigest.digest());

                    // se compara que el usuario de la base de datos es el mismo que el insertado
                    //se comparan ambas contraseñas encriptadas

                    if(nom.equals(usuario)){
                        if(pass.equals(password)){
                            // se compara si el estatus es igual a TRUE
                            if(N==0){
                                //se carga la segunda interfaz

                                ppal inter = new ppal();

                                inter.setId(id);
                                //inter.setC();
                                inter.IDusuario = ID;
                                //JOptionPane.showMessageDialog(rootPane, "Bienvenid@ "+nombre+" "+ap+" "+am+" \n\n Has entrado al sistema como: Administrador");
                                inter.setVisible(true);
                                this.dispose();

                            }
                            /*        if(N==1){
                                //se carga la segunda interfaz
                                vendedor vende = new vendedor();
                                vende.setId(id);
                                vende.IDusuario = ID;
                                JOptionPane.showMessageDialog(rootPane, "Bienvenid@ "+nombre+" "+ap+" "+am+" \n\n Has entrado al sistema como: Vendedor");
                                vende.setVisible(true);
                                this.dispose();

                            }
                            if(N==2){
                                //se carga la segunda interfaz
                                capturista cap = new capturista();
                                cap.setId(id);
                                cap.IDusuario = ID;
                                JOptionPane.showMessageDialog(rootPane, "Bienvenid@ "+nombre+" "+ap+" "+am+" \n\n Has entrado al sistema como: Capturista");
                                cap.setVisible(true);
                                this.dispose();
                            }
                            //                        //se carga la segunda interfaz
                            //                        Interface inter = new Interface();
                            //                        inter.setId(id);
                            //                        inter.setC();
                            //                        inter.IDusuario = ID;
                            //                        System.out.println(inter.IDusuario);
                            //                        JOptionPane.showMessageDialog(rootPane, "Bienvenid@ "+nombre+" "+ap+" "+am+"");
                            //                        inter.setVisible(true);
                            //                        this.dispose();
                            //
                            */
                        }
                        else{

                            JOptionPane.showMessageDialog(null,"Contraseña Incorrecta");
                            txtUser.setText("");
                            txtPass.setText("");
                        }
                    }
                    // en caso de que esten mal los datos
                    else{
                        JOptionPane.showMessageDialog(null,"Usuario o Contraseña Incorrecta");
                        txtUser.setText("");
                        txtPass.setText("");
                    }

                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jBingresarKeyPressed

    private void jBingresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBingresarActionPerformed

        // BOTON PARA INGRESAR AL SISTEMA

        // se obtiene los valores de los cuadros de texto
        String usuario=txtUser.getText();
        String pass=txtPass.getText();

        String nom="",password="",id="",nivel="";
        String nombre = null;
        String ap = null;
        String am = null;
        // se valida que no esten vacios
        if(usuario.equals("") || pass.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Faltan campos por llenar");
        }
        else{

            try {
                // se hace la conexion con la base de datos
                con = new Conexion();

                //sentencia sql para extraer los datos del usuario insertado
                String sql = "select * from usuarios where user='"+usuario+"';";

                rs = con.Consulta(sql);

                // se obtienen los datos de la consulta

                while (rs.next()){
                    id = rs.getString(1);
                    nombre= rs.getString(2);
                    ap= rs.getString(3);
                    am = rs.getString(4);
                    nom = rs.getString(5);
                    password = rs.getString(6);
                    nivel= rs.getString(7);
                }
                if (id.equals("")) {

                    JOptionPane.showMessageDialog(null,"Usuario No Encontrado");
                    txtUser.setText("");
                    txtPass.setText("");

                }
                else{
                    ID = Integer.parseInt(id);
                    int N = Integer.parseInt(nivel);

                    //  System.out.println(id+" ---- "+nom+" ---- "+password+" --- "+nivel);
                    // sentencia sql para comprobar que el estatus del usuario es TRUE
                    //                    String sql2 ="select estatus from persona where idPersona="+ID+";";
                    //                    rs = con.Consulta(sql2);
                    //                   lleno = rs.next();
                    //                   while(lleno){
                        //                       estatus = rs.getString(1);
                        //                       lleno = rs.next();
                        //                   }

                    //metodo para encriptar la contraseña insertada en MD5

                    //                MessageDigest messagedigest = null;
                    //
                    //                try {
                        //                    messagedigest = MessageDigest.getInstance("MD5");
                        //                } catch (NoSuchAlgorithmException ex) {
                        //                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                        //                }
                    //
                    //                 messagedigest.update(pass.getBytes());
                    //                String password2 = new String(messagedigest.digest());

                    // se compara que el usuario de la base de datos es el mismo que el insertado
                    //se comparan ambas contraseñas encriptadas

                    if(nom.equals(usuario)){
                        if(pass.equals(password)){
                            // se compara si el estatus es igual a TRUE
                            if(N==0){
                                //se carga la segunda interfaz

                                ppal inter = new ppal();

                                inter.setId(id);
//                                inter.setC();
                                inter.IDusuario = ID;
                                //JOptionPane.showMessageDialog(rootPane, "Bienvenid@ "+nombre+" "+ap+" "+am+" \n\n Has entrado al sistema como: Administrador");
                                inter.setVisible(true);
                                this.dispose();

                            }
                            /*            if(N==1){
                                //se carga la segunda interfaz
                                vendedor vende = new vendedor();
                                vende.setId(id);
                                vende.IDusuario = ID;
                                JOptionPane.showMessageDialog(rootPane, "Bienvenid@ "+nombre+" "+ap+" "+am+" \n\n Has entrado al sistema como: Vendedor");

                                vende.setVisible(true);

                                this.dispose();

                            }
                            if(N==2){
                                //se carga la segunda interfaz
                                capturista cap = new capturista();
                                cap.setId(id);
                                cap.IDusuario = ID;
                                JOptionPane.showMessageDialog(rootPane, "Bienvenid@ "+nombre+" "+ap+" "+am+" \n\n Has entrado al sistema como: Capturista");
                                cap.setVisible(true);
                                this.dispose();
                            }
                            //                        //se carga la segunda interfaz
                            //                        Interface inter = new Interface();
                            //                        inter.setId(id);
                            //                        inter.setC();
                            //                        inter.IDusuario = ID;
                            //                        System.out.println(inter.IDusuario);
                            //                        JOptionPane.showMessageDialog(rootPane, "Bienvenid@ "+nombre+" "+ap+" "+am+"");
                            //                        inter.setVisible(true);
                            //                        this.dispose();
                            //
                            */
                        }
                        else{

                            JOptionPane.showMessageDialog(null,"Contraseña Incorrecta");
                            txtUser.setText("");
                            txtPass.setText("");
                        }
                    }
                    // en caso de que esten mal los datos
                    else{
                        JOptionPane.showMessageDialog(null,"Usuario o Contraseña Incorrecta");
                        txtUser.setText("");
                        txtPass.setText("");
                    }

                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(ppal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jBingresarActionPerformed

    /**
    * @param args the command line arguments
    */
    
 public static void main(String args[]) {
        
         
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inicio().setVisible(true);
                
            }
        });
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBingresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

}
