/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sigi;

import Connection.Conexion;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static sigi.moduloVenta.j;

/**
 *
 * @author Gustavo
 */
public class oc extends javax.swing.JInternalFrame {
Conexion con,query;
    ResultSet rs;
    ResultSet rs2;
    ResultSet rs3;
    private int limite = 4;
    static int j=0,w=0,jj=0; 
    static String aux3;
    static float total=0;
    static String inv[]=new String[50000];
    static float invT=0;
   public static String id,cad,id_nota;
   String hora,minutos,segundos,ampm;
    Calendar calendario;    
public static int rowCount, numfac, idprov, idprovi, idpag;
    /**
     * Creates new form oc
     */
    public oc() {
        initComponents();
             llenar_combo_prov();
             llenar_forma_pago();
            
       //      String id =  (ppal.jTID.getText());
//jlusuario.setText(id);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCprov2 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jToc = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jCfechapago = new org.freixas.jcalendar.JCalendarCombo();
        jCfechaentrega = new org.freixas.jcalendar.JCalendarCombo();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTcondentrega = new javax.swing.JTextArea();
        jCpend = new javax.swing.JCheckBox();
        jlestado = new javax.swing.JLabel();
        jTvscaning = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTbuscar = new javax.swing.JTable();
        jTtotal = new javax.swing.JFormattedTextField();
        jBacep = new javax.swing.JButton();
        jCpag = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCprov2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Proveedor" }));
        getContentPane().add(jCprov2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 160, -1));

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel1.setText("Seleccionar Proveedor");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel2.setText("Fecha de entrega");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel3.setText("Condici√≥n de entrega");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel4.setText("Estado");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 46, -1));

        jToc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Scanning", "Nombre Producto", "Marca", "Precio unitario", "En Stock", "Cantidad Solicitada", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jToc.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTocAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jToc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTocKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jToc);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 813, 190));

        jButton2.setText("Borrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 510, 120, 30));

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 510, 130, 30));
        getContentPane().add(jCfechapago, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, -1, -1));
        getContentPane().add(jCfechaentrega, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, -1, -1));

        jTcondentrega.setColumns(20);
        jTcondentrega.setRows(5);
        jScrollPane2.setViewportView(jTcondentrega);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 490, 27));
        getContentPane().add(jCpend, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, -1, -1));

        jlestado.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jlestado.setText("Pendiente");
        getContentPane().add(jlestado, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, -1, -1));

        jTvscaning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTvscaningActionPerformed(evt);
            }
        });
        jTvscaning.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTvscaningKeyPressed(evt);
            }
        });
        getContentPane().add(jTvscaning, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 180, -1));

        jTbuscar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTbuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTbuscarMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTbuscar);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 810, 70));

        jTtotal.setText("0.0");
        jTtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTtotalActionPerformed(evt);
            }
        });
        getContentPane().add(jTtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 500, 130, -1));

        jBacep.setText("Crear");
        jBacep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBacepActionPerformed(evt);
            }
        });
        getContentPane().add(jBacep, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 120, 30));

        jCpag.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Forma Pago" }));
        getContentPane().add(jCpag, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, -1, -1));

        jLabel5.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel5.setText("Scanning");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        jLabel7.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jLabel7.setText("Fecha de pago");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTocAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTocAncestorAdded
 
    }//GEN-LAST:event_jTocAncestorAdded

    private void jTvscaningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTvscaningActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTvscaningActionPerformed

    private void jTvscaningKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTvscaningKeyPressed
        try {
                    // se comienza la conexion con la base de datos
                    try {
                        con = new Conexion();

                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (InstantiationException ex) {
                        Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IllegalAccessException ex) {
                        Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    String searchScanning= jTvscaning.getText();

                    String sql = "SELECT t1.scanning, t1.nombre_producto, t1.marca, t1.precio_costo, t1.id_articulo, t2.stock_min, t2.saldo_stock FROM descripcion_articulos AS t1 INNER JOIN stock AS t2 ON t1.id_articulo = t2.id_articulo WHERE t1.scanning LIKE '"+searchScanning+"%'";
                    rs = con.Consulta(sql);
                    
                    if(rs==null)
                    JOptionPane.showMessageDialog(null, "No se encontro el scaning: "+jTvscaning.getText()+" en la base de datos.");
 
                    //prueba 1
                   
                    // fin prueba
                    
                    //Para establecer el modelo al JTable

                    DefaultTableModel buscar = new DefaultTableModel(){
                        @Override
                        public boolean isCellEditable(int rowIndex, int vColIndex) {
                            return false;
                        }};
                        this.jTbuscar.setModel(buscar);
                        buscar.addColumn("Scanning");
                        buscar.addColumn("Nombre Producto");
                        buscar.addColumn("Marca");
                        buscar.addColumn("Precio Costo");
                        buscar.addColumn("Stock");
                        //Obteniendo la informacion de las columnas que estan siendo consultadas
                  /*      ResultSetMetaData rsMd = rs.getMetaData();
                        //La cantidad de columnas que tiene la consulta
                        int cantidadColumnas = rsMd.getColumnCount();
                        //Establecer como cabezeras el nombre de las colimnas
                        for (int i = 1; i <= cantidadColumnas; i++) {
                            buscar.addColumn(rsMd.getColumnLabel(i));
                        }

                        int y=0;*/
                        while (rs.next()) {
                            
                           Object[] fila = new Object[5];

                           //for (int i = 0; i < 3; i++) {
//int i = 0;
  //                            fila[i]=rs.getObject(i+1);
                            //Object[] fila = new Object[3];//Creamos un Objeto con tantos par√°metros como datos retorne cada fila 
                                              // de la consulta
                fila[0] = rs.getString("scanning"); //Lo que hay entre comillas son los campos de la base de datos
                fila[1] = rs.getString("nombre_producto");
                fila[2] = rs.getString("marca");
                fila[3] = rs.getFloat("precio_costo");
                fila[4] = rs.getInt("saldo_stock");
                buscar.addRow(fila); // A√±ade una fila al final del modelo de la tabla
                            //}
                            //buscar.addRow(fila);
                           // for(int l=0;l<7;l++)
                           // buscar.isCellEditable(y, l);
                           // y++;
                        //jTbuscar.updateUI();
                        }
    
                    } catch (SQLException ex) {
                        Logger.getLogger(moduloVenta.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                    //    jTcant.requestFocusInWindow();
                        jTbuscar.selectAll();
                    //    jTcant.selectAll();
                    }
                   
            ///// pasar el dato a la tabla con enter        
           /*         if(evt.getKeyCode() == KeyEvent.VK_ENTER){   
        DefaultTableModel modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int rowIndex, int vColIndex) {
                return false;
            }};

            int aux = jTable1.getSelectedRow();
            Integer exist=(Integer)jTable1.getValueAt(jTable1.getSelectedRow(), 2);
            if (aux==-1)
            {

                JOptionPane.showMessageDialog(null, "No se a seleccionado nada de la tabla.");

            }

            else
            {
                String scanning = jTable1.getValueAt(aux, 0).toString();
                String nombre = jTable1.getValueAt(aux, 1).toString();
                String stock = jTable1.getValueAt(aux, 2).toString();
                 
           
                    DefaultTableModel temp = (DefaultTableModel)
                    jToc.getModel();

                    Object nuevo[]= {temp.getRowCount()+1,"",""};
                    temp.addRow(nuevo);
//descuento
                    
                    jToc.setValueAt(scanning, j, 1);
                    jToc.setValueAt(nombre, j, 2);
                    jToc.setValueAt(stock, j, 3);
                  
                    j++;//Aumenta el contador

                
                    
                    jTvscaningv.setText("");
              //  jTcant.setText("1");
              //  jTdesc.setText("0");
                jTvscaningv.requestFocusInWindow();
                jTable1.setModel(new DefaultTableModel());
                
            }}*/
                    
    }//GEN-LAST:event_jTvscaningKeyPressed

    private void jTbuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTbuscarMouseClicked
          // if(evt.getKeyCode() == KeyEvent.VK_ENTER){   
        DefaultTableModel modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int rowIndex, int vColIndex) {
                return false;
            }};

            int aux = jTbuscar.getSelectedRow();
            //Integer exist=(Integer)jTbuscar.getValueAt(jTbuscar.getSelectedRow(), 2);
            if (aux==-1)
            {

                JOptionPane.showMessageDialog(null, "No se a seleccionado nada de la tabla.");

            }

            else
            {
                String scanning = jTbuscar.getValueAt(aux, 0).toString();
                String nombre = jTbuscar.getValueAt(aux, 1).toString();
                String marca = jTbuscar.getValueAt(aux, 2).toString();
                String costo = jTbuscar.getValueAt(aux, 3).toString();
              //calculo  
             
                //String total2 = "0";
///sacar el total
             /*  
                int f = jToc.getSelectedRow();
                String cantidad = jToc.getValueAt(f, 4).toString();
                int cant = Integer.parseInt(cantidad);
                int cos = Integer.parseInt(costo);
                int total = cant+cos;
                String tot = Integer.toString(total);
               int c = jToc.getSelectedColumn();
                  
                String total = jToc.getValueAt(f, c).toString();
                int tot = Integer.parseInt(total);
               
                   int cant = Integer.parseInt(cantidad);
                   int cost = Integer.parseInt(costo);
                    int total1 = cant*cost;
                    String total2 = Integer.toString(total1);*/
               
                    DefaultTableModel temp = (DefaultTableModel)
                    jToc.getModel();

                    Object nuevo[]= {temp.getRowCount()+1,"",""};
                    temp.addRow(nuevo);
//descuento         
                    String ini = "1";
                    String item = Integer.toString (j+1);
                    jToc.setValueAt(item, j, 0);
                    jToc.setValueAt(scanning, j, 1);
                    jToc.setValueAt(nombre, j, 2);
                    jToc.setValueAt(marca, j, 3);
                    jToc.setValueAt(costo, j, 4);
                    jToc.setValueAt(ini, j, 5);
                    jToc.setValueAt(costo, j, 6);
                    //jToc.setValueAt(tot, j, 5);
                    j++;//Aumenta el contador
                    
                
                    
                    jTvscaning.setText("");
              //  jTcant.setText("1");
              //  jTdesc.setText("0");
                jTvscaning.requestFocusInWindow();
                jTbuscar.setModel(new DefaultTableModel());
                
            }   
       
 double sumatoria1=0.0;

        int totalRow= jToc.getRowCount();

        totalRow-=1;

        for(int i=0;i<=(totalRow);i++)

        {

             double sumatoria= Double.parseDouble(String.valueOf(jToc.getValueAt(i,6)));

//en la parte de arriba indica el primer parametro la fila y el segundo la columna la cual estaras //manejando

             sumatoria1+=sumatoria;
             String suma = Double.toString(sumatoria1);
 
 jTtotal.setText(suma);
         // System.out.println(""+sumatoria1);

 

           }
   
                  
    }//GEN-LAST:event_jTbuscarMouseClicked

    private void jTocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTocKeyPressed

        

// if(evt.getKeyCode() == KeyEvent.VK_ENTER){
 DefaultTableModel temp = (DefaultTableModel)
                    jToc.getModel();

       //             Object nuevo[]= {temp.getRowCount(),"",""};
                //    temp.addRow(nuevo);

            int aux = jToc.getSelectedRow();
            //Integer exist=(Integer)jTbuscar.getValueAt(jTbuscar.getSelectedRow(), 2);
            if (aux==-1)
            {

                

            }

            else
            {
        
                String cantidad = jToc.getValueAt(aux, 5).toString();
                float cant = Float.parseFloat(cantidad);
                String costo = jToc.getValueAt(aux, 4).toString();
                float cos = Float.parseFloat(costo);
                float total = cant*cos;
                String tot = Float.toString(total);
                 jToc.setValueAt(tot, aux, 6);
                 
                
                 
            }                     
 //}     
                //String total2 = "0";
///sacar el total
     /*          
                int aux = jToc.getSelectedRow();
                String cantidad = jToc.getValueAt(aux, 4).toString();
                int cant = Integer.parseInt(cantidad);
                int cos = Integer.parseInt(jToc.getValueAt(aux, 3).toString());
                int total = cant+cos;
                String tot = Integer.toString(total);
                 jToc.setValueAt(tot, aux, 5);*/
               /*int c = jToc.getSelectedColumn();
                  
                String total = jToc.getValueAt(f, c).toString();
                int tot = Integer.parseInt(total);
               
                   int cant = Integer.parseInt(cantidad);
                   int cost = Integer.parseInt(costo);
                    int total1 = cant*cost;
                    String total2 = Integer.toString(total1);*/
               
            /*        DefaultTableModel temp = (DefaultTableModel)
                    jToc.getModel();

                    Object nuevo[]= {temp.getRowCount()+1,"",""};
                    temp.addRow(nuevo);
//descuento           
                    
                    //jToc.setValueAt(1, j, 4);
                    jToc.setValueAt(tot, aux, 5);
                    j++;//Aumenta el contador
                    
                
                    
                    jTvscaning.setText("");
              //  jTcant.setText("1");
              //  jTdesc.setText("0");
                jTvscaning.requestFocusInWindow();
                jTbuscar.setModel(new DefaultTableModel());
                
             
            */
            //// Sumatoria.........---
            double sumatoria1=0.0;

        int totalRow= jToc.getRowCount();

        totalRow-=1;

        for(int i=0;i<=(totalRow);i++)

        {

             double sumatoria= Double.parseDouble(String.valueOf(jToc.getValueAt(i,5)));

//en la parte de arriba indica el primer parametro la fila y el segundo la columna la cual estaras //manejando

             sumatoria1+=sumatoria;
             String suma = Double.toString(sumatoria1);
 
 jTtotal.setText(suma);
         // System.out.println(""+sumatoria1);

 

           }
        
    }//GEN-LAST:event_jTocKeyPressed

    private void jTtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTtotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTtotalActionPerformed

    private void jBacepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBacepActionPerformed
        
         int e;
        String existe = null;
            String ID = null;
            String ticket;
            String ss;
        try {
                    //se crea la conexion y las consultas
                    con = new Conexion();
                    ///Incerto datos en la tabla de las ordenes_compra
                     String prov = (String) jCprov2.getSelectedItem();
                    String sql = "SELECT * FROM proveedores WHERE empresa LIKE '"+prov+"%'";

                    //funcion para ejecutar la query
                   // con.Consulta(sql);
                     rs = con.Consulta(sql);
                     if(rs.next()){
                   idprovi=rs.getInt("id_proveedor");
                     
                     }
                      String pag = (String) jCpag.getSelectedItem();
                    String sqlp = "SELECT * FROM forma_pago WHERE nombre LIKE '"+pag+"%'";

                    //funcion para ejecutar la query
                   // con.Consulta(sql);
                     rs2 = con.Consulta(sqlp);
                     if(rs2.next()){
                   idpag=rs2.getInt("id_forma_pago");
                     
                     }
                   String idprov = Integer.toString(idprovi);
                    String iduser = Integer.toString(Login.userId);
                   String total = jTtotal.getText();
                 ///obtener la fecha con el formato correcto para la base mysql 
                 String fp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(jCfechapago.getDate());
                 String fe = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(jCfechaentrega.getDate());
                   
                  
                   String condent=jTcondentrega.getText();
                    boolean activo = jCpend.isSelected();
                   int activo2 = activo ? 1 : 0;
                    String venta = "INSERT INTO  `sigi`.`ordenes_compra` (`id_usuario` ,`id_proveedor` ,`total` ,`fecha_estimada_recepcion`, `id_forma_pago`, `fecha_de_pago`, `condici√≥n_de_entrega`, `aprovado`)VALUES "
                            + "('"+iduser+"' ,  '"+idprov+"', '"+total+"', '"+fe+"', '"+idpag+"', '"+fp+"', '"+condent+"', '"+activo2+"');";
                    con.ejecutar(venta);
                    ///Fin ordenes_compra
                    
                    String pro[] = new String[100],p;
                    String pro2[] = new String[100];
                    String cos1 = "0";
                    String cant1= "0";
                    String scan1 = "0";
                    Object scan;
                    Object cos;
                    Object cant;
                    int to[] = new int[100];
                    float prec[] = new float[100];
                    Object ex = null,precio=null;
                    Object pros=null;

                    // se crea la sentecia sql y se ejecuta para hacer la modificacion
                    for (int i=0; i<j; i++) {
                        scan = jToc.getValueAt(i, 1);
                        scan1 = objectToString(scan);
                        pros = jToc.getValueAt(i, 2);
                        String pro1 = objectToString(pros);
                        p=objectToString(jToc.getValueAt(i, 1));
                        prec[i]= Float.parseFloat(p);
                        ex=  jToc.getValueAt(i, 2);
                        String xe = objectToString(ex);
                     //   to[i] = Integer.parseInt(xe);
                        cos = jToc.getValueAt(i, 3);
                        cos1 = objectToString(cos);
                        cant = jToc.getValueAt(i, 4);
                        cant1 = objectToString(cant);
                       
                            
                        String sqlc = "SELECT * FROM `ordenes_compra` ORDER BY id_ordenes_compra DESC LIMIT 1";
                        // System.out.println("antes");
                        rs3 = con.Consulta(sqlc);
                        // System.out.println("despues");
                        while(rs3.next()){
                            ID = rs3.getString("id_ordenes_compra");
                          //  existe = rs.getString(5);

                        }
                       
                        venta = "INSERT INTO `oc_productos` (`id_orden_de_compra`, `scaning_producto`, `nombre_producto`, `cantidad`, `costo`) VALUES ('"+ID+"', '"+scan1+"', '"+pros+"', '"+cant1+"', '"+cos1+"');";
                        con.ejecutar(venta);}
/*
                        e = Integer.parseInt(existe);
                        // Float k = Float.parseFloat(ex[i]);
                        int t = e - to[i];

                        String modifica = "UPDATE  `articulos` SET  `existencia` = "+t+" WHERE `id_producto` ="+ID+"";
                        con.ejecutar(modifica);

                    }*/
                    //////                FileOutputStream os = null;
                    //////                try {
                        //////                    os = new FileOutputStream("ticket.txt");
                        //////                } catch (FileNotFoundException ex1) {
                        //////                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex1);
                        //////                }
                    //////                  PrintStream ps = new PrintStream(os);
               /*     String iduser = ppal.jTID.getText();
                 //   String t=jToc.getText();
                  //  float tota = Float.parseFloat(t);
                    String user = "SELECT * FROM usuarios WHERE Id_usuario= '"+iduser+"'";
                    String nombre = null,ap = null;
                    rs = con.Consulta(user);
                    while(rs.next()){
                        nombre = rs.getString(2);
                        ap = rs.getString(3);
                    }
                   String prov = (String) jCprov2.getSelectedItem();
                   String fp = (String) jCfechapago.getSelectedItem();
                   String fe = (String) jCfechaentrega.getSelectedItem();
                   String condent=jTcondentrega.getText();
                    boolean activo = jCpend.isSelected();
                   int activo2 = activo ? 1 : 0;
                    String id34=ppal.jTID.getText();
                  
                    //String venta = "INSERT INTO `ventas`(`total`, `id_usuario`) VALUES (,'"+t+"','"+id34+"')";
                //    String venta = "INSERT INTO  `sigi`.`ordenes_compra` (`id_ventas` ,`total` ,`fecha` ,`Id_usuario`)VALUES (NULL ,  '"+t+"', CURRENT_TIMESTAMP ,  '"+id34+"');";
                //    con.ejecutar(venta);
                    for(int i=0;i<j;i++){
                     String   venta = "INSERT INTO `sigi`.`oc_productos` (`scanning_producto`, `nombre_producto`, `cantidad`, `costo`) VALUES ('"+pro2[i]+"', '"+prec[i]+"', '"+to[i]+"', '"+cant1+"', '"+cos1+"');";
                        con.ejecutar(venta);
                    }
                   */
JOptionPane.showMessageDialog(null, "Generada la OC.");
                }catch (ClassNotFoundException ex) {
                    Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                }
   // jToc.setModel(new DefaultTableModel());
    jTtotal.setText("0.0");
    llenar_combo_prov();
     int x =jToc.getRowCount()-1;

        {
            try
            {
                DefaultTableModel temp = (DefaultTableModel) jToc.getModel();
                while(x>=0){
                    temp.removeRow(x);
                    x--;
                }
            }
            catch(ArrayIndexOutOfBoundsException d){}
        }

        j=0;
        
    
    jTcondentrega.setText("");
    jCpend.setSelected(false);
    llenar_forma_pago();
    }//GEN-LAST:event_jBacepActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel)jToc.getModel();
int fila = jToc.getSelectedRow();
modelo.removeRow(fila);  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
           total=0;
        jTtotal.setText("0.00");

        int x =jToc.getRowCount()-1;

        {
            try
            {
                DefaultTableModel temp = (DefaultTableModel) jToc.getModel();
                while(x>=0){
                    temp.removeRow(x);
                    x--;
                }
            }
            catch(ArrayIndexOutOfBoundsException e){}
        }

        j=0;
    }//GEN-LAST:event_jButton3ActionPerformed
/*public void buscar_nro_oc(){
    try{
              
               try {
                   
                con = new Conexion();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
                }
                String sql = "SELECT * FROM ordenes_compra order by id_ordenes_compra asc limit 1";
//MAX(id_ordenes_compra) AS id
                    //funcion para ejecutar la query
                   // con.Consulta(sql);
                     rs = con.Consulta(sql);

                    if(rs==null) 
                  
                        if(rs.next() ) {

   int oc = rs.getInt("id_ordenes_compra");
   int ocsum = oc+1;
   String oc1 = Integer.toString(ocsum);
   nrooc.setText(oc1);
  
    //o resultados.afterLast(); seg√∫n lo que est√©s buscando

}
                        
              
           
            
            } catch (SQLException ex) {
          Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
            }
}*/
      public void llenar_combo_prov() {
       DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();//esto es el modelo  
      
       try{
              
               try {
                   
                con = new Conexion();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
                }
                String sql = "SELECT * FROM proveedores ORDER BY empresa";

                    //funcion para ejecutar la query
                   // con.Consulta(sql);
                     rs = con.Consulta(sql);

                    if(rs==null) 
                        JOptionPane.showMessageDialog(null, "No hay proveedores en la base de datos.");
                modeloCombo.addElement("Seleccione Proveedor");//es el primer registro q mostrara el combo
                jCprov2.setModel(modeloCombo);//con esto lo agregamos al objeto al jcombobox
                while (rs.next()) {
                    modeloCombo.addElement(rs.getObject("empresa"));
                    
                    jCprov2.setModel(modeloCombo);
                //    String valor = rs.getString("empresa");
//---- Aqu√≠ recuperas los valores obtenidos y realizas la carga del JCombobox
//---- Previamente debes tener creado el ComboBox: JComboBox combo = new JComboBox();
//jCprov2.addItem(valor); 
                    //jCprov.addItem (rs.getObject("empresa"));
                    jCprov2.updateUI();
                }
           
            
            } catch (SQLException ex) {
          Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
            }
    }  
 public void llenar_forma_pago() {
       DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();//esto es el modelo  
      
       try{
              
               try {
                   
                con = new Conexion();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
                }
                String sql = "SELECT * FROM forma_pago";

                    //funcion para ejecutar la query
                   // con.Consulta(sql);
                     rs = con.Consulta(sql);

                    if(rs==null) 
                        JOptionPane.showMessageDialog(null, "Error");
                modeloCombo.addElement("Forma Pago");//es el primer registro q mostrara el combo
                jCpag.setModel(modeloCombo);//con esto lo agregamos al objeto al jcombobox
                while (rs.next()) {
                    modeloCombo.addElement(rs.getObject("nombre"));
                    
                    jCpag.setModel(modeloCombo);
                //    String valor = rs.getString("empresa");
//---- Aqu√≠ recuperas los valores obtenidos y realizas la carga del JCombobox
//---- Previamente debes tener creado el ComboBox: JComboBox combo = new JComboBox();
//jCprov2.addItem(valor); 
                    //jCprov.addItem (rs.getObject("empresa"));
                    jCpag.updateUI();
                }
           
            
            } catch (SQLException ex) {
          Logger.getLogger(oc.class.getName()).log(Level.SEVERE, null, ex);
            }
    }  


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBacep;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private org.freixas.jcalendar.JCalendarCombo jCfechaentrega;
    private org.freixas.jcalendar.JCalendarCombo jCfechapago;
    private javax.swing.JComboBox jCpag;
    private javax.swing.JCheckBox jCpend;
    private javax.swing.JComboBox jCprov2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTbuscar;
    private javax.swing.JTextArea jTcondentrega;
    private javax.swing.JTable jToc;
    private javax.swing.JFormattedTextField jTtotal;
    private javax.swing.JTextField jTvscaning;
    private javax.swing.JLabel jlestado;
    // End of variables declaration//GEN-END:variables

/*    private String objectToString(Object pros) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}*/
public String objectToString(Object o) {
        String st;
        st = (String) o;
        return st;
    }
}